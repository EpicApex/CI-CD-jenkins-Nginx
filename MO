1) Create Dockerfile which will serve Nginx server.

    1.1) I'll be using the underlying ENTRYPOINT and CMD provided by the base NGINX image. Due to that I did not add an ENTRYPOINT or a CMD to the Dockerfile.
        1.1.1) ENTRYPOINT ["/docker-entrypoint.sh"]
        1.1.2) CMD ["nginx" "-g" "daemon off;"]

    1.2) Edit static content
        1.2.1) Default nginx static content /usr/share/nginx/html/index.html changed for exercise purpose to "Hello World" by curl and copy in docker file - of index.html

    1.3) Push image to dockerHub
        1.3.1) docker build -t bonvoyage/nginx-webserver-project:1.3 .
        1.3.2) docker push bonvoyage/nginx-webserver-project:1.3

2) Create nginx-ns namespace for k8s cluster

3) Create nginx deployment
    3.1) k apply -n nginx-ns deployment-nginx.yaml

4) Create service-nginx 
    4.1) k apply -n nginx-ns service-nginx.yaml

5) Deploy Ingress
    5.1) Deploy Ingress controller to recognize and interact with ingress resources under any namespace of k8s cluster - 
         #note - It is deployed on its own namespace separated from my apps services
        5.1.1) k apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.40.1/deploy/static/provider/cloud/deploy.yaml
        
    5.2) Create ingress-nginx resource 
        5.2.1) k apply -n nginx-ns ingress-nginx.yaml
        5.2.1) Defined to direct http requests to port 80

6) Verify that index.html is indeed altered with the new dockerHub image curled from git repo.
    6.1.1) Push local repo to github https://github.com/EpicApex/CI-CD-jenkins-Nginx to begin the CI/CD process

7) Deploy jenkins locally - http://localhost:32015/
    7.1.1) Service : k apply -n nginx-ns -f service-jenkins.yaml
    7.1.2) Deployment : k apply -n nginx-ns -f deployment-jenkins.yaml
    7.1.3) Login to Jenkins using the adming password from jenkins container - cat /var/jenkins_home/secrets/initialAdminPassword
    7.2.1) Create pipeline job from scm (git)
    7.2.2) install 'docker pipeline' from plugins to enable the ci/cd pipeline
    7.2.3) Create custom jenkins file with docker binaries on them so we can build the image with jenkins using docker under k8s

